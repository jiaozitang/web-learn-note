{"version":3,"file":"bundle.js","sources":["../node_modules/_@babel_runtime@7.14.5@@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/_@babel_runtime@7.14.5@@babel/runtime/helpers/esm/defineProperty.js","../src/手写系列/Promise/基本用法.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// Promise 的 3 种状态\nconst STATUS = {\n  PENDING: 'pending',\n  FULFILLED: 'fulfilled',\n  REJECTED: 'rejected'\n}\n\nexport default class MyPromise {\n  constructor (executor) {\n      // 执行器\n      executor(this.resolve, this.reject)\n  }\n  // 初始状态\n  status = STATUS.PENDING\n  \n  // 成功返回值\n  value = null\n  \n  // 失败返回值\n  reason = null\n  \n  // 修改 Promise 状态，并定义成功返回值\n  resolve = value => {\n      if (this.status === STATUS.PENDING) {\n          this.status = STATUS.FULFILLED\n          this.value = value\n      }\n  }\n  \n  // 修改 Promise 状态，并定义失败返回值\n  reject = () => {\n      if (this.status === STATUS.PENDING) {\n              this.status = STATUS.REJECTED\n              this.reason = value\n          }\n      }\n\n  then = function (onFulfilled, onRejected) {\n    if (this.status === STATUS.FULFILLED) {\n        onFulfilled(this.value)\n    } else if (this.status === STATUS.REJECTED) {\n        onRejected(this.reason)\n    }\n  }\n}\n\nconst mypromise = new MyPromise((resolve, reject) => {\n  resolve('成功')\n})\n\nmypromise.then(data => {\n  console.log(data, '请求成功') // 成功打印“成功 请求成功”\n}, err => {\n  console.log(err, '请求失败')\n})"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","STATUS","PENDING","FULFILLED","REJECTED","MyPromise","executor","status","reason","onFulfilled","onRejected","resolve","reject","mypromise","then","data","console","log","err"],"mappings":";;;EAAe,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;EAC7D,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;EACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EACD;EACF;;ECJc,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;EACvD,MAAID,GAAG,IAAID,GAAX,EAAgB;EACdG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;EAC9BC,MAAAA,KAAK,EAAEA,KADuB;EAE9BG,MAAAA,UAAU,EAAE,IAFkB;EAG9BC,MAAAA,YAAY,EAAE,IAHgB;EAI9BC,MAAAA,QAAQ,EAAE;EAJoB,KAAhC;EAMD,GAPD,MAOO;EACLP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;EACD;;EAED,SAAOF,GAAP;EACD;;ECbD;EACA,IAAMQ,MAAM,GAAG;EACbC,EAAAA,OAAO,EAAE,SADI;EAEbC,EAAAA,SAAS,EAAE,WAFE;EAGbC,EAAAA,QAAQ,EAAE;EAHG,CAAf;;MAMqBC,YACnB,mBAAaC,QAAb,EAAuB;EAAA;;EAAA;;EAAA,kCAKdL,MAAM,CAACC,OALO;;EAAA,iCAQf,IARe;;EAAA,kCAWd,IAXc;;EAAA,mCAcb,UAAAP,KAAK,EAAI;EACf,QAAI,KAAI,CAACY,MAAL,KAAgBN,MAAM,CAACC,OAA3B,EAAoC;EAChC,MAAA,KAAI,CAACK,MAAL,GAAcN,MAAM,CAACE,SAArB;EACA,MAAA,KAAI,CAACR,KAAL,GAAaA,KAAb;EACH;EACJ,GAnBsB;;EAAA,kCAsBd,YAAM;EACX,QAAI,KAAI,CAACY,MAAL,KAAgBN,MAAM,CAACC,OAA3B,EAAoC;EAC5B,MAAA,KAAI,CAACK,MAAL,GAAcN,MAAM,CAACG,QAArB;EACA,MAAA,KAAI,CAACI,MAAL,GAAcb,KAAd;EACH;EACJ,GA3BkB;;EAAA,gCA6BhB,UAAUc,WAAV,EAAuBC,UAAvB,EAAmC;EACxC,QAAI,KAAKH,MAAL,KAAgBN,MAAM,CAACE,SAA3B,EAAsC;EAClCM,MAAAA,WAAW,CAAC,KAAKd,KAAN,CAAX;EACH,KAFD,MAEO,IAAI,KAAKY,MAAL,KAAgBN,MAAM,CAACG,QAA3B,EAAqC;EACxCM,MAAAA,UAAU,CAAC,KAAKF,MAAN,CAAV;EACH;EACF,GAnCsB;;EACnB;EACAF,EAAAA,QAAQ,CAAC,KAAKK,OAAN,EAAe,KAAKC,MAApB,CAAR;EACH;;EAmCH,IAAMC,SAAS,GAAG,IAAIR,SAAJ,CAAc,UAACM,OAAD,EAAUC,MAAV,EAAqB;EACnDD,EAAAA,OAAO,CAAC,IAAD,CAAP;EACD,CAFiB,CAAlB;EAIAE,SAAS,CAACC,IAAV,CAAe,UAAAC,IAAI,EAAI;EACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB,EADqB;EAEtB,CAFD,EAEG,UAAAG,GAAG,EAAI;EACRF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAAiB,MAAjB;EACD,CAJD;;;;;;"}