{"version":3,"file":"bundle.js","sources":["../src/lib/util.js","../src/lib/element.js","../src/lib/const.js","../../../../node_modules/list-diff2/lib/diff.js","../../../../node_modules/list-diff2/index.js","../src/lib/diff.js","../../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../src/lib/patch.js","../src/index.js"],"sourcesContent":["var _ = exports\n\n_.type = function (obj) {\n  return Object.prototype.toString.call(obj).replace(/\\[object\\s|\\]/g, '')\n}\n\n_.isArray = function isArray (list) {\n  return _.type(list) === 'Array'\n}\n\n_.slice = function slice (arrayLike, index) {\n  return Array.prototype.slice.call(arrayLike, index)\n}\n\n_.truthy = function truthy (value) {\n  return !!value\n}\n\n_.isString = function isString (list) {\n  return _.type(list) === 'String'\n}\n\n_.each = function each (array, fn) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    fn(array[i], i)\n  }\n}\n\n_.toArray = function toArray (listLike) {\n  if (!listLike) {\n    return []\n  }\n\n  var list = []\n\n  for (var i = 0, len = listLike.length; i < len; i++) {\n    list.push(listLike[i])\n  }\n\n  return list\n}\n\n_.setAttr = function setAttr (node, key, value) {\n  switch (key) {\n    case 'style':\n      node.style.cssText = value\n      break\n    case 'value':\n      var tagName = node.tagName || ''\n      tagName = tagName.toLowerCase()\n      if (\n        tagName === 'input' || tagName === 'textarea'\n      ) {\n        node.value = value\n      } else {\n        // if it is not a input or textarea, use `setAttribute` to set\n        node.setAttribute(key, value)\n      }\n      break\n    default:\n      node.setAttribute(key, value)\n      break\n  }\n}\n","import _ from './util'\n\nfunction Element (tagName, props = {}, children = []) {\n  if (!(this instanceof Element)) {\n    if (!(children instanceof Array) && children !== null) {\n      children = children.slice(2).filter(i => i)\n    }\n\n    return new Element(tagName, props, children)\n  }\n\n  if (props instanceof Array) {\n    children = props\n    props = {}\n  }\n\n  \n  this.tagName = tagName\n  this.props = props\n  this.children = children\n  const { key = 666 } = this.props\n  this.key = key\n\n  let count = 0\n\n  this.children.forEach((child, index) => {\n    if (child instanceof Element) {\n      count += child.count\n    } else {\n      children[index] = child.toString()\n    }\n\n    count++\n  })\n\n  this.count = count\n}\n\nElement.prototype.render = function () {\n  const el = document.createElement(this.tagName)\n  const props = this.props\n\n  for (const propName in props) {\n    const propValue = props[propName]\n    _.setAttr(el, propName, propValue)\n  }\n\n  this.children.forEach((child) => {\n    let childEl\n\n    if (child instanceof Element) {\n      childEl = child.render()\n    } else {\n      childEl = document.createTextNode(child)\n    }\n    el.appendChild(childEl)\n  })\n\n  return el\n}\n\nexport default Element\n","export const PATCH_KEY = {\n    REPLACE: 0,\n    REORDER: 1,\n    PROPS: 2,\n    TEXT: 3\n}","/**\r\n * Diff two list in O(N).\r\n * @param {Array} oldList - Original List\r\n * @param {Array} newList - List After certain insertions, removes, or moves\r\n * @return {Object} - {moves: <Array>}\r\n *                  - moves is a list of actions that telling how to remove and insert\r\n */\r\nfunction diff (oldList, newList, key) {\r\n  var oldMap = makeKeyIndexAndFree(oldList, key)\r\n  var newMap = makeKeyIndexAndFree(newList, key)\r\n\r\n  var newFree = newMap.free\r\n\r\n  var oldKeyIndex = oldMap.keyIndex\r\n  var newKeyIndex = newMap.keyIndex\r\n\r\n  var moves = []\r\n\r\n  // a simulate list to manipulate\r\n  var children = []\r\n  var i = 0\r\n  var item\r\n  var itemKey\r\n  var freeIndex = 0\r\n\r\n  // fist pass to check item in old list: if it's removed or not\r\n  while (i < oldList.length) {\r\n    item = oldList[i]\r\n    itemKey = getItemKey(item, key)\r\n    if (itemKey) {\r\n      if (!newKeyIndex.hasOwnProperty(itemKey)) {\r\n        children.push(null)\r\n      } else {\r\n        var newItemIndex = newKeyIndex[itemKey]\r\n        children.push(newList[newItemIndex])\r\n      }\r\n    } else {\r\n      var freeItem = newFree[freeIndex++]\r\n      children.push(freeItem || null)\r\n    }\r\n    i++\r\n  }\r\n\r\n  var simulateList = children.slice(0)\r\n\r\n  // remove items no longer exist\r\n  i = 0\r\n  while (i < simulateList.length) {\r\n    if (simulateList[i] === null) {\r\n      remove(i)\r\n      removeSimulate(i)\r\n    } else {\r\n      i++\r\n    }\r\n  }\r\n\r\n  // i is cursor pointing to a item in new list\r\n  // j is cursor pointing to a item in simulateList\r\n  var j = i = 0\r\n  while (i < newList.length) {\r\n    item = newList[i]\r\n    itemKey = getItemKey(item, key)\r\n\r\n    var simulateItem = simulateList[j]\r\n    var simulateItemKey = getItemKey(simulateItem, key)\r\n\r\n    if (simulateItem) {\r\n      if (itemKey === simulateItemKey) {\r\n        j++\r\n      } else {\r\n        // new item, just inesrt it\r\n        if (!oldKeyIndex.hasOwnProperty(itemKey)) {\r\n          insert(i, item)\r\n        } else {\r\n          // if remove current simulateItem make item in right place\r\n          // then just remove it\r\n          var nextItemKey = getItemKey(simulateList[j + 1], key)\r\n          if (nextItemKey === itemKey) {\r\n            remove(i)\r\n            removeSimulate(j)\r\n            j++ // after removing, current j is right, just jump to next one\r\n          } else {\r\n            // else insert item\r\n            insert(i, item)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      insert(i, item)\r\n    }\r\n\r\n    i++\r\n  }\r\n\r\n  function remove (index) {\r\n    var move = {index: index, type: 0}\r\n    moves.push(move)\r\n  }\r\n\r\n  function insert (index, item) {\r\n    var move = {index: index, item: item, type: 1}\r\n    moves.push(move)\r\n  }\r\n\r\n  function removeSimulate (index) {\r\n    simulateList.splice(index, 1)\r\n  }\r\n\r\n  return {\r\n    moves: moves,\r\n    children: children\r\n  }\r\n}\r\n\r\n/**\r\n * Convert list to key-item keyIndex object.\r\n * @param {Array} list\r\n * @param {String|Function} key\r\n */\r\nfunction makeKeyIndexAndFree (list, key) {\r\n  var keyIndex = {}\r\n  var free = []\r\n  for (var i = 0, len = list.length; i < len; i++) {\r\n    var item = list[i]\r\n    var itemKey = getItemKey(item, key)\r\n    if (itemKey) {\r\n      keyIndex[itemKey] = i\r\n    } else {\r\n      free.push(item)\r\n    }\r\n  }\r\n  return {\r\n    keyIndex: keyIndex,\r\n    free: free\r\n  }\r\n}\r\n\r\nfunction getItemKey (item, key) {\r\n  if (!item || !key) return void 666\r\n  return typeof key === 'string'\r\n    ? item[key]\r\n    : key(item)\r\n}\r\n\r\nexports.makeKeyIndexAndFree = makeKeyIndexAndFree // exports for test\r\nexports.diff = diff\r\n","module.exports = require('./lib/diff').diff\n","import { PATCH_KEY } from './const'\nimport listDiff from 'list-diff2'\n\nfunction diff (oldTree, newTree) {\n    let index = 0\n    const patches = {}\n    dfsWalk(oldTree, newTree, index, patches)\n    return patches\n}\n\nfunction dfsWalk (oldNode, newNode, index, patches) {\n    const currentPatch = []\n\n    if (newNode === null) {\n\n    } else if (typeof oldNode === 'string' && typeof newNode === 'string') {\n        // 如果旧节点和新节点都是文本类型\n        // 如果节点有更新，，将该更新同步至currentPatch\n        if (newNode !== oldNode) {\n            currentPatch.push({\n                type: PATCH_KEY.TEXT,\n                content: newNode\n            })\n        }\n    } else if (\n        // 如果新旧节点的标签名、key值相等\n        oldNode.tagName === newNode.tagName &&\n        oldNode.key === newNode.key\n    ) {\n        // 对比节点属性\n        const propsPatches = diffProps(oldNode, newNode)\n\n        // 如果有属性更新，将该更新同步至currentPatch\n        if (propsPatches) {\n            currentPatch.push({\n                type: PATCH_KEY.PROPS,\n                props: propsPatches\n            })\n        }\n\n        if (!isIgnoreChildren(newNode)) {\n            // 对比子节点\n            diffChildren(\n                oldNode.children,\n                newNode.children,\n                index,\n                patches,\n                currentPatch\n            )\n        }\n    } else {\n        // 如果新节点存在，且和旧节点标签名不同，或者key不同，则直接将新节点替换为旧节点\n        currentPatch.push({\n            type: PATCH_KEY.REPLACE, \n            node: newNode\n        })\n    }\n\n    if (currentPatch.length) {\n        patches[index] = currentPatch\n    }\n}\n\nfunction diffChildren (oldChildren, newChildren, index, patches, currentPatch) {\n    const diffs = listDiff(oldChildren, newChildren, 'key')\n    const { moves, children } = diffs\n\n    newChildren = children\n\n    if (moves.length) {\n        const reorderPatch = {\n            type: PATCH_KEY.REORDER,\n            moves: moves\n        }\n        currentPatch.push(reorderPatch)\n    }\n\n    let leftNode = null\n    let currentNodeIndex = index\n    oldChildren.forEach((oldChild, index) => {\n        const newChild = newChildren[index]\n        currentNodeIndex = (leftNode && leftNode.count) \n            ? currentNodeIndex + leftNode.count + 1\n            : currentNodeIndex + 1\n        dfsWalk(oldChild, newChild, currentNodeIndex, patches)\n        leftNode = oldChild\n    })\n}\n\nfunction diffProps (oldNode, newNode) {\n    let count = 0\n    const oldProps = oldNode.props\n    const newProps = newNode.props\n\n    let key, value\n    let propsPatches = {}\n\n    for (key in oldProps) {\n        value = oldProps[key]\n        if (newProps[key] !== value) {\n            count++\n            // 得到更新、删除的属性\n            propsPatches[key] = newProps[key]\n        }\n    }\n\n    for (key in newProps) {\n        value = newProps[key]\n        if(!oldProps.hasOwnProperty(key)) {\n            count++\n            // 得到删除的属性\n            propsPatches[key] = newProps[key]\n        }\n    }\n\n    if (count === 0) {\n        return null\n    }\n\n    return propsPatches\n}\n\nfunction isIgnoreChildren (node) {\n    return (node.props && node.props.hasOwnProperty('ignore'))\n}\n\nexport default diff","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import { PATCH_KEY } from './const'\n\nconst {\n    REPLACE,\n    REORDER,\n    PROPS,\n    TEXT\n} = PATCH_KEY\n\nfunction patch (node, patches) {\n    const walker = {\n        index: 0\n    }\n    dfsWalk(node, walker, patches)\n}\n\nfunction dfsWalk (node, walker, patches) {\n    const { index } = walker\n    const { childNodes } = node\n    const currentPatches = patches[index]\n\n    childNodes.forEach(child => {\n        walker.index++\n        dfsWalk(child, walker, patches)\n    })\n\n    if (currentPatches) {\n        applyPatches(node, currentPatches)\n    }\n}\n\nfunction applyPatches (node, currentPatches) {\n    currentPatches.forEach(currentPatch => {\n        switch (currentPatch.type) {\n            case REPLACE:\n                const newNode = (typeof currentPatch.node === 'string')\n                    ? document.createTextNode(currentPatch.node)\n                    : currentPatch.node.render()\n                node.parentNode.replaceChild(newNode, node)\n                break\n\n            case REORDER:\n                reorderChildren(node, currentPatch.moves)\n                break\n            \n            case PROPS:\n                setProps(node, currentPatch.props)\n                break\n\n            case TEXT:\n                node.textContent = currentPatch.content\n                break\n\n            default:\n                throw new Error('Unknown patch type' + currentPatch.type)\n        }\n    }) \n}\n\nfunction setProps (node, props) {\n    for(let key in props) {\n        if(props[key] === 666) {\n            node.removeAttribute(key)\n        } else {\n            const value = props[key]\n            _.setAttr(node, key, value)\n        }\n    }\n}\n\nfunction reorderChildren (node, moves) {\n    const { childNodes } = node\n    const staticNodeList = Array.from(childNodes)\n    const maps = {}\n\n    staticNodeList.forEach(node => {\n        if (node.nodeType === 1) {\n            const key = node.getAttribute('key')\n            if (key) {\n                maps[key] = node\n            }\n        }\n    })\n\n    moves.forEach(move => {\n        const { index, type } = move\n\n        if (type === 0) {\n            if (staticNodeList[index] === node.childNodes[index]) {\n                node.removeChild(node.childNodes[index])\n            }\n            staticNodeList.splice(index, 1)\n        } else if (type === 1) {\n            var insertNode = maps[move.item.key]\n            ? maps[move.item.key].cloneNode(true) // reuse old item\n            : (typeof move.item === 'object')\n                ? move.item.render()\n                : document.createTextNode(move.item)\n          staticNodeList.splice(index, 0, insertNode)\n          node.insertBefore(insertNode, node.childNodes[index] || null)\n        }\n    })\n    \n}\n\nexport default patch","import Element from './lib/element'\nimport diff from './lib/diff'\nimport patch from './lib/patch'\n\nconst el = Element\n\nlet count = 0\n\nfunction renderTree () {\n    count++\n\n    var items = []\n    var color = (count % 2 === 0)\n      ? 'blue'\n      : 'red'\n\n    for (var i = 0; i < count; i++) {\n      items.push(el('li', ['Item #' + i]))\n    }\n\n    return el('div', {'id': 'container'}, [\n      el('h1', {style: 'color: ' + color}, ['simple virtal dom']),\n      el('p', ['the count is :' + count]),\n      el('ul', items)\n    ])\n  }\n\nlet tree = renderTree()\nconst root = tree.render()\ndocument.body.appendChild(root)\n\nsetInterval(() => {\n    const newTree = renderTree()\n    const patches = diff(tree, newTree)\n    console.log(patches)\n    patch(root, patches)\n\n    tree = newTree\n}, 1000)\n"],"names":["_","exports","type","obj","Object","prototype","toString","call","replace","isArray","list","slice","arrayLike","index","Array","truthy","value","isString","each","array","fn","i","len","length","toArray","listLike","push","setAttr","node","key","style","cssText","tagName","toLowerCase","setAttribute","Element","props","children","filter","count","forEach","child","render","el","document","createElement","propName","propValue","childEl","createTextNode","appendChild","PATCH_KEY","REPLACE","REORDER","PROPS","TEXT","diff","oldList","newList","oldMap","makeKeyIndexAndFree","newMap","newFree","free","oldKeyIndex","keyIndex","newKeyIndex","moves","item","itemKey","freeIndex","getItemKey","hasOwnProperty","newItemIndex","freeItem","simulateList","remove","removeSimulate","j","simulateItem","simulateItemKey","insert","nextItemKey","move","splice","listDiff2","require$$0","oldTree","newTree","patches","dfsWalk","oldNode","newNode","currentPatch","content","propsPatches","diffProps","isIgnoreChildren","diffChildren","oldChildren","newChildren","diffs","listDiff","reorderPatch","leftNode","currentNodeIndex","oldChild","newChild","oldProps","newProps","_typeof","Symbol","iterator","constructor","patch","walker","childNodes","currentPatches","applyPatches","parentNode","replaceChild","reorderChildren","setProps","textContent","Error","removeAttribute","staticNodeList","from","maps","nodeType","getAttribute","removeChild","insertNode","cloneNode","insertBefore","renderTree","items","color","tree","root","body","setInterval","console","log"],"mappings":"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"}